 if (SQLAllocHandle(SQL_HANDLE_ENV, SQL_NULL_HANDLE, &hEnv) == SQL_ERROR)
   throw L"Unable to allocate an environment handle";
  
 if (SQLSetEnvAttr(hEnv, SQL_ATTR_ODBC_VERSION, (SQLPOINTER)SQL_OV_ODBC3, 0) == SQL_ERROR)
   throw L"Unable to set environment";

 if (SQLAllocHandle(SQL_HANDLE_DBC, hEnv, &hDbc) == SQL_ERROR)
   throw L"Unable to alloc handle";

 if (SQLDriverConnect(hDbc, 0, (SQLWCHAR *)constr.c_str(), constr.size(), NULL, 0, NULL, SQL_DRIVER_COMPLETE) == SQL_ERROR)
   throw L"Unable to connect";

 if (SQLAllocHandle(SQL_HANDLE_STMT, hDbc, &hStmt) == SQL_ERROR)
   throw L"Unable to allocate handle";

 rc = SQLExecDirect(hStmt, (SQLWCHAR *)query.c_str(), query.size());
 if (rc == SQL_INVALID_HANDLE)
   throw L"Invalid handle";

if (rc == SQL_ERROR || rc == SQL_SUCCESS_WITH_INFO)
  {
   SQLSMALLINT iRec=0;
   WCHAR  wszState[SQL_SQLSTATE_SIZE+1];
   SQLINTEGER  iError;
   WCHAR       wszMessage[1000];

   SQLGetDiagRec(SQL_HANDLE_STMT, hStmt, ++iRec, wszState, &iError, wszMessage, (SQLSMALLINT)(sizeof(wszMessage) / sizeof(WCHAR)), (SQLSMALLINT *)NULL);
  }
 else
  {
   if (SQLBindCol(hStmt, 1, SQL_C_SLONG, &id, 4, &idlen) == SQL_ERROR)
     throw L"bind failed";
   if (SQLBindCol(hStmt, 2, SQL_C_WCHAR, &output, 1000, &outlen) == SQL_ERROR)
     throw L"bind failed";
   while(SQLFetch(hStmt) == SQL_SUCCESS)
    {
     rows++;
    }
   SQLFreeStmt(hStmt, SQL_CLOSE);
  }
 if (hStmt) SQLFreeHandle(SQL_HANDLE_STMT, hStmt);
 SQLDisconnect(hDbc);
 SQLFreeHandle(SQL_HANDLE_DBC, hDbc);
 SQLFreeHandle(SQL_HANDLE_ENV, hEnv);